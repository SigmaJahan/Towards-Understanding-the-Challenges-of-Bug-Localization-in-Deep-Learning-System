# -*- coding: utf-8 -*-
"""EMSE_Visualization_Updated.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IC28NoLlsVISttR_-SJErgVRZhTP9tCn
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from google.colab import files

import math
from matplotlib.patches import Rectangle
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors

def plot_colortable(colors, *, ncols=4, sort_colors=True):

    cell_width = 212
    cell_height = 22
    swatch_width = 48
    margin = 12

    if sort_colors is True:
        names = sorted(
            colors, key=lambda c: tuple(mcolors.rgb_to_hsv(mcolors.to_rgb(c))))
    else:
        names = list(colors)

    n = len(names)
    nrows = math.ceil(n / ncols)

    width = cell_width * 4 + 2 * margin
    height = cell_height * nrows + 2 * margin
    dpi = 72

    fig, ax = plt.subplots(figsize=(width / dpi, height / dpi), dpi=dpi)
    fig.subplots_adjust(margin/width, margin/height,
                        (width-margin)/width, (height-margin)/height)
    ax.set_xlim(0, cell_width * 4)
    ax.set_ylim(cell_height * (nrows-0.5), -cell_height/2.)
    ax.yaxis.set_visible(False)
    ax.xaxis.set_visible(False)
    ax.set_axis_off()

    for i, name in enumerate(names):
        row = i % nrows
        col = i // nrows
        y = row * cell_height

        swatch_start_x = cell_width * col
        text_pos_x = cell_width * col + swatch_width + 7

        ax.text(text_pos_x, y, name, fontsize=14,
                horizontalalignment='left',
                verticalalignment='center')

        ax.add_patch(
            Rectangle(xy=(swatch_start_x, y-9), width=swatch_width,
                      height=18, facecolor=colors[name], edgecolor='0.7')
        )

    return fig


plot_colortable(mcolors.CSS4_COLORS)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

techniques = ['BugLocator', 'BLUiR', 'BLIA', 'DNNLOC', 'bjXnet']
dlsw_map = [0.314, 0.257, 0.355, 0.408, 0.440]
ndlsw_map = [0.459, 0.385, 0.539, 0.595, 0.610]

x = np.arange(len(techniques))
width = 0.35

fig, ax = plt.subplots(figsize=(10, 6))
rects1 = ax.bar(x - width/2, dlsw_map, width, label='DLSW', color='steelblue')
rects2 = ax.bar(x + width/2, ndlsw_map, width, label='NDLSW', color='lightskyblue')

ax.set_ylabel('MAP Score')
ax.set_xlabel('Bug Localization Techniques')
ax.set_xticks(x)
ax.set_xticklabels(techniques)
ax.set_ylim(0, 0.7)

ax.legend(loc='best')

fig.tight_layout()
plt.grid(linestyle='--')
plt.show()

import matplotlib.pyplot as plt
import numpy as np

methods = ['BugLocator', 'BLUiR', 'BLIA', 'DNNLOC', 'bjXnet']
project_classes = ['Framework', 'Library', 'Tool']
map_scores = {
    'BugLocator': [0.334, 0.453, 0.407],
    'BLUiR': [0.155, 0.539, 0.387],
    'BLIA': [0.392, 0.486, 0.449],
    'DNNLOC': [0.412, 0.597, 0.514],
    'bjXnet': [0.510, 0.640, 0.550]
}

bar_width = 0.15
r1 = np.arange(len(project_classes))
r2 = [x + bar_width for x in r1]
r3 = [x + bar_width for x in r2]
r4 = [x + bar_width for x in r3]
r5 = [x + bar_width for x in r4]

plt.figure(figsize=(10, 6))

plt.bar(r1, map_scores['BugLocator'], color='royalblue', width=bar_width, edgecolor='dimgray', label='BugLocator')
plt.bar(r2, map_scores['BLUiR'], color='deepskyblue', width=bar_width, edgecolor='dimgray', label='BLUiR')
plt.bar(r3, map_scores['BLIA'], color='cornflowerblue', width=bar_width, edgecolor='dimgray', label='BLIA')
plt.bar(r4, map_scores['DNNLOC'], color='steelblue', width=bar_width, edgecolor='dimgray', label='DNNLOC')
plt.bar(r5, map_scores['bjXnet'], color='lightsteelblue', width=bar_width, edgecolor='dimgray', label='bjXnet')

plt.xlabel('Project Class in DL Systems')
plt.ylabel('MAP Score')
plt.xticks([r + 2*bar_width for r in range(len(project_classes))], project_classes)
plt.ylim([0, 0.7])

plt.legend()
plt.tight_layout()
plt.grid(linestyle='--')
plt.show()

bug_types = ['Model', 'Training', 'Tensor', 'API', 'GPU']
map_scores = {
    'BugLocator': [0.368, 0.312, 0.235, 0.446, 0.183],
    'BLUiR': [0.293, 0.403, 0.601, 0.258, 0.266],
    'BLIA': [0.357, 0.345, 0.448, 0.395, 0.290],
    'DNNLOC': [0.593, 0.411, 0.619, 0.493, 0.296],
    'bjXnet': [0.650, 0.420, 0.650, 0.460, 0.310]
}

bar_width = 0.15
r1 = np.arange(len(bug_types))
r2 = [x + bar_width for x in r1]
r3 = [x + bar_width for x in r2]
r4 = [x + bar_width for x in r3]
r5 = [x + bar_width for x in r4]

plt.figure(figsize=(10, 6))

plt.bar(r1, map_scores['BugLocator'], color='royalblue', width=bar_width, edgecolor='dimgray', label='BugLocator')
plt.bar(r2, map_scores['BLUiR'], color='deepskyblue', width=bar_width, edgecolor='dimgray', label='BLUiR')
plt.bar(r3, map_scores['BLIA'], color='cornflowerblue', width=bar_width, edgecolor='dimgray', label='BLIA')
plt.bar(r4, map_scores['DNNLOC'], color='steelblue', width=bar_width, edgecolor='dimgray', label='DNNLOC')
plt.bar(r5, map_scores['bjXnet'], color='lightsteelblue', width=bar_width, edgecolor='dimgray', label='bjXnet')
plt.xlabel('DL Bug Type')
plt.ylabel('MAP Score')
plt.xticks([r + 2*bar_width for r in range(len(bug_types))], bug_types)
plt.ylim([0, 0.7])
plt.legend()
plt.tight_layout()
plt.grid(linestyle='--')
plt.show()

import numpy as np
import matplotlib.pyplot as plt

n_groups = 4
MAP_BugLocator = (0.287, 0.359, 0.375, 0.405)
MAP_BLUiR = (0.277, 0.369, 0.301, 0.359)
MAP_BLIA = (0.321, 0.449, 0.382, 0.487)
MAP_DNNLOC = (0.334, 0.486, 0.390 ,0.505)
MAP_bjXnet = (0.310, 0.510, 0.367, 0.470)

fig, ax = plt.subplots(figsize=(10, 6))
index = np.arange(n_groups)
bar_width = 0.15
opacity = 0.8
colors = ['royalblue', 'deepskyblue', 'cornflowerblue', 'steelblue', 'lightsteelblue']

rects1 = ax.bar(index - 2 * bar_width, MAP_BugLocator, bar_width, alpha=opacity, color=colors[0], edgecolor='dimgray', label='BugLocator')
rects2 = ax.bar(index - bar_width, MAP_BLUiR, bar_width, alpha=opacity, color=colors[1], edgecolor='dimgray',label='BLUiR')
rects3 = ax.bar(index, MAP_BLIA, bar_width, alpha=opacity, color=colors[2], edgecolor='dimgray',label='BLIA')
rects4 = ax.bar(index + bar_width, MAP_DNNLOC, bar_width, alpha=opacity, color=colors[3], edgecolor='dimgray',label='DNNLOC')
rects5 = ax.bar(index + 2 * bar_width, MAP_bjXnet, bar_width, alpha=opacity, color=colors[4],edgecolor='dimgray',label='bjXnet')

ax.set_xlabel('Bug Type')
ax.set_ylabel('MAP Score')
ax.set_xticks(index)
ax.set_xticklabels(('DLSW_EXT', 'DLSW_INT', 'NDLSW_EXT', 'NDLSW_INT'))
ax.legend()

plt.tight_layout()
plt.grid(linestyle='--')
plt.show()

DLSW = [40.0, 60.00]
NDLSW  = [10.649350649350648, 89.35064935064935]
index = ["Extrinsic Bug", "Intrinsic Bug"]
fig, ax = plt.subplots()
ind = np.arange(len(index))
width = 0.20
rects1 = ax.bar(ind - width/2, DLSW, width, label='DLSW', color='navy')
rects2 = ax.bar(ind + width/2, NDLSW, width, label='NDLSW', color='cornflowerblue')
ax.set_xlabel('Bug Type')
ax.set_ylabel('Prevalence Ratio (%)')
ax.grid(axis='y', linestyle='--', alpha=0.7)
ax.set_xticks(ind)
ax.set_xticklabels(index)
ax.legend()
plt.show()

